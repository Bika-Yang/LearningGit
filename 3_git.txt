git安装位置最好没有中文没有空格

git常用命令
git config --global user.name 用户名
	用来设置用户签名
git config --global user.email 邮箱
	用来设置用户签名
用户签名和登录github的账号没有任何关系，邮箱地址也可以随意填写，git不会验证

git init
	初始化本地库
git status
	查看本地库状态
git add 文件名
	添加到暂存区
git commit -m "日志信息" 文件名
	提交到本地库
git reflog
	查看历史记录
git reset --hard 版本号
	版本穿梭
git rm --cached 文件名
	删除暂存区中的文件
git reflog
	查看历史信息
git log
	查看详细日志

HEAD文件描述了当前所在的本地库分支
/refs/head/master描述了在当前分支下处在的版本号
<<<<<<< HEAD
（master）
=======
（hot-fix）
>>>>>>> hot-fix
分支命令
git branch 分支名
	创建分支
git branch -v
	查看分支
git branch -a
	查看所有分支
git branch -r
	查看所有远程仓库分支
git checkout 分支名
	切换分支
git merge 分支名
	把指定的分支合并得当前分支上

两个分支在同一个文件的同一个位置有两套完全不同的修改，就会产生代码冲突
同一个文件同一个位置产生的冲突

两个分支在同一个文件的同一个位置有两套完全不同的修改，就会产生代码冲突
=======
同一个文件同一个位置产生的冲突
>>>>>>> hot-fix
产生冲突后分支名会标示，表明正在合并，但未成功
HEAD和等号之间是当前分支
人为合并冲突后，需要再添加到暂存区并提交本地库
	此时提交本地库不能带文件名 

git remote -v
	查看当前所有远程地址别名
git remote add 别名 远程地址
	起别名
git push 别名 本地库的分支名
	推送本地分支上的内容到远程仓库
git clone 远程地址
	将远程仓库的内容克隆到本地
git pull 远程库地址别名 远程分支名
	将远程仓库对于分支最新内容拉下来后与当前本地分支直接合并
（别名也可以用地址代替）

远程仓库创建分支步骤
1、git clone 远程仓库地址
	说明：在本地还没有该下拉过这个远程仓库前，需要先下拉远程仓库，在本地进行操作
2、git remote add 远程仓库别名a 远程仓库地址
	说明：下拉仓库后，为便于操作，需要给它起一个远程仓库别名a，并将这个名称远程仓库地址进行关联
3、git chenkout -b newbranchname
	说明：在本地创建并切换到一个名为newbranchname的分支
4、git push 远程仓库别名a newbranchname
	说明：将新的分支推送到远程仓库，这样，在远程仓库就会自动创建一个名为newbranchname（与本地新分支名称相同）的分支

删除远程仓库分支步骤
git push 远程仓库别名 :远程仓库的分支名
	如：git push origin :newbrach